#
#  Rules for building the Allegro static link library with MINGW32.
#  This file is included by the primary makefile,
#  and should not be used directly.
#
#  The "depend" target uses sed.
#
#  See makefile.all for a list of the available targets.



# -------- define some variables that the primary makefile will use --------

PLATFORM = MINGW32
EXE = .exe
OBJ = .o
HTML = html

ifdef STATICLINK

# -------- link as a static library --------
OBJ_DIR = obj/mingw32/$(VERSION)_s
IMPLIB_BASENAME = lib$(VERSION)_s.a
IMPLIB_NAME = lib/mingw32/$(IMPLIB_BASENAME)
LIB_NAME = $(IMPLIB_NAME)

else

# -------- link as a DLL --------
OBJ_DIR = obj/mingw32/$(VERSION)
DLL_BASENAME = $(SHORT_VERSION)$(LIBRARY_VERSION).dll
DLL_NAME = lib/mingw32/$(DLL_BASENAME)
IMPLIB_BASENAME = lib$(VERSION).a
IMPLIB_NAME = lib/mingw32/$(IMPLIB_BASENAME)
LIB_NAME = $(DLL_NAME) $(IMPLIB_NAME)

EXPDEF_NAME=lib/mingw32/allegro.def
endif



# -------- check that environment path variable is set --------
#
.PHONY: badwin badming

ifeq ($(OS),Windows_NT)
  WINSYSDIR = $(SYSTEMROOT)
  WINSUBDIR = system32
else
  WINSYSDIR = $(WINDIR)
  WINSUBDIR = system
endif

ifneq ($(WINSYSDIR),)
  WINDIR_U = $(subst \,/,$(WINSYSDIR)/$(WINSUBDIR))
  WINDIR_D = $(subst /,\,$(WINSYSDIR)\$(WINSUBDIR))
else
badwin:
	@echo Your SYSTEMROOT or WINDIR environment variable is not set!
endif

ifdef MINGDIR
  MINGDIR_U = $(subst \,/,$(MINGDIR))
  MINGDIR_D = $(subst /,\,$(MINGDIR))
else
badming:
	@echo Please specify your mingw32 directory via MINGDIR=. See the readme.mgw file!
endif


# -------- give a sensible default target for make without any args --------

.PHONY: _default

_default: default



# -------- decide what compiler options to use --------
#
ifdef WARNMODE
    WFLAGS = -Wall -W -Werror -Wno-unused
else
    WFLAGS = -Wall -Wno-unused
endif

ifdef PGCC
    OFLAGS = -mpentium -O6 -ffast-math
else
    OFLAGS = -m486 -O3 -ffast-math
endif

ifdef DEBUGMODE
    # -------- debugging build --------
    CFLAGS = -DDEBUGMODE=$(DEBUGMODE) $(WFLAGS) -g
    SFLAGS = -DDEBUGMODE=$(DEBUGMODE) $(WFLAGS)
    LFLAGS += -g
else
ifdef PROFILEMODE
    # -------- profiling build --------
    CFLAGS = $(WFLAGS) $(OFLAGS) -pg
    SFLAGS = $(WFLAGS)
    LFLAGS += -pg
else
    # -------- optimised build --------
    CFLAGS = $(WFLAGS) $(OFLAGS) -fomit-frame-pointer -fno-strength-reduce
    SFLAGS = $(WFLAGS)
  ifndef SYMBOLMODE
    LFLAGS += -s
  endif
endif
endif



# -------- list platform specific objects and programs --------

VPATH = src/win src/i386 src/misc wintests

OBJECT_LIST = $(COMMON_OBJECTS) $(I386_OBJECTS) $(basename $(notdir $(ALLEGRO_SRC_WIN_FILES)))

LIBRARIES = -lkernel32 -luser32 -lgdi32 -lcomdlg32 -lole32 -ldinput -lddraw -ldxguid -lwinmm -ldsound
PROGRAMS = dibgrab dibhello scrsave

dibgrab: wintests/dibgrab.exe
dibhello: wintests/dibhello.exe
scrsave: wintests/scrsave.scr


# -------- rules for installing and removing the library files --------

ifndef STATICLINK

$(WINDIR_U)/$(DLL_BASENAME): $(DLL_NAME)
	copy lib\mingw32\$(DLL_BASENAME) $(WINDIR_D)

endif

$(MINGDIR_U)/lib/$(IMPLIB_BASENAME): $(IMPLIB_NAME)
	copy lib\mingw32\$(IMPLIB_BASENAME) $(MINGDIR_D)\lib

$(MINGDIR_U)/include/allegro.h: include/allegro.h
	copy include\allegro.h $(MINGDIR_D)\include

$(MINGDIR_U)/include/winalleg.h: include/winalleg.h
	copy include\winalleg.h $(MINGDIR_D)\include

$(MINGDIR_U)/include/allegro:
	md $(MINGDIR_D)\include\allegro 

$(MINGDIR_U)/include/allegro/%.h: include/allegro/%.h
	copy $(subst /,\,$< $@)

HEADERS = $(addprefix $(MINGDIR_U)/,$(wildcard include/allegro/*.h))

INSTALL_FILES = $(MINGDIR_U)/lib/$(IMPLIB_BASENAME) $(MINGDIR_U)/include/allegro.h $(MINGDIR_U)/include/winalleg.h $(MINGDIR_U)/include/allegro $(HEADERS)

ifndef STATICLINK
INSTALL_FILES += $(WINDIR_U)/$(DLL_BASENAME)
endif

install: $(INSTALL_FILES)
	@echo The $(DESCRIPTION) MINGW32 library has been installed.

UNINSTALL_FILES = $(MINGDIR_U)/lib/alleg.a $(MINGDIR_U)/lib/alld.a $(MINGDIR_U)/lib/allp.a $(MINGDIR_U)/include/allegro.h $(MINGDIR_U)/include/winalleg.h $(MINGDIR_U)/include/allegro/*.h $(WINDIR_U)/all$(LIBRARY_VERSION).dll $(WINDIR_U)/ald$(LIBRARY_VERSION).dll $(WINDIR_U)/alp$(LIBRARY_VERSION).dll
uninstall:
	-rm -fv $(UNINSTALL_FILES)
	-rd $(MINGDIR_D)\include\allegro
	@echo All gone!



# -------- autodetect whether the assembler supports MMX instructions --------

.PHONY: mmxtest

mmxtest:
	echo // no MMX > obj\mingw32\mmx.h
	echo .text > obj\mingw32\mmxtest.s
	echo emms >> obj\mingw32\mmxtest.s
	gcc -c obj/mingw32/mmxtest.s -o obj/mingw32/mmxtest.o
	echo #define ALLEGRO_MMX > obj\mingw32\mmx.h

obj/mingw32/mmx.h:
	@echo Testing for MMX assembler support...
	-$(MAKE) mmxtest



# -------- finally, we get to the fun part... --------

ifdef STATICLINK

# -------- link as a static library --------
define MAKE_LIB
  ar rs $(LIB_NAME) $(OBJECTS)
endef

COMPILE_FLAGS = -DALLEGRO_STATICLINK 

else

# -------- link as a DLL --------
ifdef FASTDLL
define MAKE_LIB
  gcc $(LFLAGS) -shared -Wl,--out-implib,$(IMPLIB_NAME),--just-symbols,$(EXPDEF_NAME) -o $(DLL_NAME) $(OBJECTS) $(LIBRARIES)
endef
else
define MAKE_LIB
  dllwrap --def $(EXPDEF_NAME) -o $(DLL_NAME) $(OBJECTS) $(LIBRARIES) --output-lib $(IMPLIB_NAME)
endef
endif

endif # STATICLINK

COMPILE_FLAGS += $(subst src/,-DALLEGRO_SRC ,$(findstring src/, $<))$(CFLAGS)

$(OBJ_DIR)/%.o: %.c
	gcc $(COMPILE_FLAGS) -I. -I./include -o $@ -c $<

$(OBJ_DIR)/%.o: %.s
	gcc $(SFLAGS) -I. -I./include -x assembler-with-cpp -o $@ -c $<

ifdef STATICLINK

*/%.exe: $(OBJ_DIR)/%.o $(IMPLIB_NAME)
	gcc $(LFLAGS) -mwindows -o $@ $< $(IMPLIB_NAME)  $(LIBRARIES) 

wintests/scrsave.scr: $(OBJ_DIR)/scrsave.o $(OBJ_DIR)/scrsave.res $(IMPLIB_NAME)
	gcc $(LFLAGS) -mwindows -o wintests/scrsave.scr $(OBJ_DIR)/scrsave.o $(OBJ_DIR)/scrsave.res $(IMPLIB_NAME) $(LIBRARIES)

define LINK_CONSOLE
gcc $(LFLAGS) -o $@ $< $(IMPLIB_NAME) $(LIBRARIES)
endef

else 

*/%.exe: $(OBJ_DIR)/%.o $(IMPLIB_NAME)
	gcc $(LFLAGS) -mwindows -o $@ $< $(IMPLIB_NAME)  

wintests/scrsave.scr: $(OBJ_DIR)/scrsave.o $(OBJ_DIR)/scrsave.res $(IMPLIB_NAME)
	gcc $(LFLAGS) -mwindows -o wintests/scrsave.scr $(OBJ_DIR)/scrsave.o $(OBJ_DIR)/scrsave.res $(IMPLIB_NAME)

define LINK_CONSOLE
gcc $(LFLAGS) -o $@ $< $(IMPLIB_NAME)
endef

endif # STATICLINK

$(OBJ_DIR)/scrsave.res: wintests/scrsave.rc
	windres -O coff -o $(OBJ_DIR)/scrsave.res -i wintests/scrsave.rc

LINK_CONSOLE_DEPS = $(IMPLIB_NAME)

obj/mingw32/asmdef.inc: obj/mingw32/asmdef.exe
	obj/mingw32/asmdef.exe obj/mingw32/asmdef.inc

obj/mingw32/asmdef.exe: src/i386/asmdef.c
	gcc -O $(WFLAGS) -I. -I./include -o obj/mingw32/asmdef.exe src/i386/asmdef.c

PLUGIN_LIB = lib/mingw32/$(VERY_SHORT_VERSION)dat.a
PLUGIN_DEPS = $(IMPLIB_NAME) $(PLUGIN_LIB)
PLUGINS_H = obj/mingw32/plugins.h
PLUGIN_SCR = scv


define GENERATE_PLUGINS_H
copy tools\plugins\*.inc obj\mingw32\plugins.h
endef

define MAKE_PLUGIN_LIB
ar rs $(PLUGIN_LIB) $(PLUGIN_OBJS)
endef

ifdef STATICLINK

define LINK_WITH_PLUGINS
gcc $(LFLAGS) -o $@ $< $(strip $(PLUGIN_LIB) $(addprefix @,$(PLUGIN_SCRIPTS)) $(IMPLIB_NAME) $(LIBRARIES))
endef

define LINK_CONSOLE_WITH_PLUGINS
gcc $(LFLAGS) -o $@ $< $(strip $(PLUGIN_LIB) $(addprefix @,$(PLUGIN_SCRIPTS)) $(IMPLIB_NAME) $(LIBRARIES))
endef

else

define LINK_WITH_PLUGINS
gcc $(LFLAGS) -o $@ $< $(strip $(PLUGIN_LIB) $(addprefix @,$(PLUGIN_SCRIPTS)) $(IMPLIB_NAME))
endef

define LINK_CONSOLE_WITH_PLUGINS
gcc $(LFLAGS) -o $@ $< $(strip $(PLUGIN_LIB) $(addprefix @,$(PLUGIN_SCRIPTS)) $(IMPLIB_NAME))
endef

endif # STATICLINK



# -------- generate automatic dependencies --------

DEPEND_PARAMS = -D__MINGW32__ -MM -MG -I. -I./include -DSCAN_DEPEND

depend:
	gcc $(DEPEND_PARAMS) src/*.c src/win/*.c src/i386/*.c src/misc/*.c demo/*.c examples/*.c setup/*.c tests/*.c tools/*.c tools/plugins/*.c wintests/*.c > _depend.tmp
	gcc $(DEPEND_PARAMS) -x assembler-with-cpp src/i386/*.s src/win/*.s >> _depend.tmp
	sed -e "s/^[a-zA-Z0-9_\/]*\///" _depend.tmp > _depend2.tmp
	sed -e "s/^\([a-zA-Z0-9_]*\)\.o:/obj\/mingw32\/alleg\/\1\.o:/" _depend2.tmp > obj/mingw32/alleg/makefile.dep
	sed -e "s/^\([a-zA-Z0-9_]*\)\.o:/obj\/mingw32\/alld\/\1\.o:/" _depend2.tmp > obj/mingw32/alld/makefile.dep
	sed -e "s/^\([a-zA-Z0-9_]*\)\.o:/obj\/mingw32\/allp\/\1\.o:/" _depend2.tmp > obj/mingw32/allp/makefile.dep
	sed -e "s/^\([a-zA-Z0-9_]*\)\.o:/obj\/mingw32\/alleg_s\/\1\.o:/" _depend2.tmp > obj/mingw32/alleg_s/makefile.dep
	sed -e "s/^\([a-zA-Z0-9_]*\)\.o:/obj\/mingw32\/alld_s\/\1\.o:/" _depend2.tmp > obj/mingw32/alld_s/makefile.dep
	sed -e "s/^\([a-zA-Z0-9_]*\)\.o:/obj\/mingw32\/allp_s\/\1\.o:/" _depend2.tmp > obj/mingw32/allp_s/makefile.dep
	rm _depend.tmp _depend2.tmp
