# Video streaming addon

These functions are declared in the following header file.
Link with allegro_video.

~~~~c
 #include <allegro5/allegro_video.h>
~~~~

Currently we have an ffmpeg backend and a Ogg backend (Theora + Vorbis).
See <http://ffmpeg.org/> and <http://xiph.org/> for installation instructions,
licensing information and supported video formats.

## API: ALLEGRO_VIDEO_EVENT_TYPE

* ALLEGRO_EVENT_VIDEO_FRAME_ALLOC
* ALLEGRO_EVENT_VIDEO_FRAME_SHOW

Since: 5.1.0

## API: ALLEGRO_VIDEO_POSITION_TYPE

Used with [al_get_video_position] to specify which position to retrieve. If
these get out of sync, audio and video may be out of sync in the display of
the video.

* ALLEGRO_VIDEO_POSITION_ACTUAL -
The amount of time the video has been playing. If the video has audio then
this value can be ahead of ALLEGRO_VIDEO_POSITION_VIDEO_DECODE when video
decoding lags.

* ALLEGRO_VIDEO_POSITION_VIDEO_DECODE -
The amount of video that has been decoded. This may lag behind the "actual"
and audio positions if decoding is slower than realtime.

* ALLEGRO_VIDEO_POSITION_AUDIO_DECODE -
The amount of audio that has been decoded. This may be the same as
ALLEGRO_VIDEO_POSITION_ACTUAL if audio decode is driving the position,
which is common to keep audio and video in sync.

Since: 5.1.11

## API: al_init_video_addon

Initializes the video addon.

Since: 5.1.12

## API: al_shutdown_video_addon

Shut down the video addon. This is done automatically at program exit,
but can be called any time the user wishes as well.

Since: 5.1.12

## API: al_get_allegro_video_version

Returns the (compiled) version of the addon, in the same format as
[al_get_allegro_version].

Since: 5.1.12

## API: al_open_video

Reads a video file. This does not start streaming yet but reads the
meta info so you can query e.g. the size or audio rate.

Since: 5.1.0

## API: al_close_video

Closes the video and frees all allocated resources. The video pointer
is invalid after the function returns.

Since: 5.1.0

## API: al_start_video

Starts streaming the video from the beginning.

Since: 5.1.0

## API: al_start_video_with_voice

Like [al_start_video] but audio is routed to the provided voice.

Since: 5.1.0

## API: al_get_video_event_source

Get an event source for the video. The possible events are described
under [ALLEGRO_VIDEO_EVENT_TYPE].

Since: 5.1.0

## API: al_pause_video

Paused or resumes playback.

Since: 5.1.0

## API: al_is_video_paused

Returns true if the video is currently paused.

Since: 5.1.0

## API: al_get_video_aspect_ratio

Returns the aspect ratio of the video. Videos often do not use square
pixels so you should always check the aspect ratio before displaying
video frames.

Returns zero or a negative value if the aspect ratio is unknown.

Since: 5.1.0

## API: al_get_video_audio_rate

Returns the audio rate of the video, in Hz.

Since: 5.1.0

## API: al_get_video_fps

Returns the speed of the video in frames per second. Often this will
not be an integer value.

Since: 5.1.0

## API: al_get_video_width

Returns the number of raw pixel columns in the video stream.
Multiply this with the aspect ratio to get the true width.

Since: 5.1.0

See also: [al_get_video_aspect_ratio]

## API: al_get_video_height

Returns the number of rows in the video. Typically this will be
720 or 1080.

Since: 5.1.0

## API: al_get_video_frame

Returns the current video frame. The bitmap is owned by the video so
do not attempt to free it. The bitmap will stay valid until the next
call to al_get_video_frame.

Since: 5.1.0

## API: al_get_video_position

Returns the current position of the video stream in seconds since the
beginning. The parameter is one of the [ALLEGRO_VIDEO_POSITION_TYPE]
constants.

Since: 5.1.0

## API: al_seek_video

Seek to a different position in the video. Right now this does not
work very well in the ffmpeg backend when seeking backwards and will
often lose audio/video synchronization if doing so.

Since: 5.1.0
